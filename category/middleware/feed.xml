<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Middleware on Middleware Warez</title>
    <link>https://dywicki.pl/category/middleware/</link>
    <description>Recent content in Middleware on Middleware Warez</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 26 Dec 2017 23:56:41 +0000</lastBuildDate>
    <atom:link href="https://dywicki.pl/category/middleware/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing a staged release of project dependency</title>
      <link>https://dywicki.pl/2017/12/testing-a-staged-release/</link>
      <pubDate>Tue, 26 Dec 2017 23:56:41 +0000</pubDate>
      <guid>https://dywicki.pl/2017/12/testing-a-staged-release/</guid>
      <description>&lt;p&gt;One of most important things, if not the most important in software, is release process. There are whole books written about &amp;ldquo;shipping software&amp;rdquo; and software release is one of key parts which needs to happen in order to deliver our programs to end users. In this very short post I will give you a short tip about how to do a test drive of a release which is not published yet. One of main principles of maven central is &amp;ldquo;what goes there, stays there&amp;rdquo;, meaning that anything which becomes public will stay public. For that reason we, as software developers, want to deploy things which are free of any major issues at release time.
&lt;a href=&#34;https://maven.apache.org/guides/development/guide-testing-releases.html&#34;&gt;Staged release&lt;/a&gt; is one of things which are supported by maven-release-plugin. Overall idea behind this is to let people have a test drive before deploying artifacts to public repositories from which they can not be removed. Of course this might be seen as completely unnecessary step if you release a small library, but could be extremely useful for bigger projects, avoiding something I would call a quick fix hiccup.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced Apache Camel logging and best practices</title>
      <link>https://dywicki.pl/2012/02/advanced-apache-camel-logging-and-best-practices/</link>
      <pubDate>Tue, 28 Feb 2012 00:09:14 +0000</pubDate>
      <guid>https://dywicki.pl/2012/02/advanced-apache-camel-logging-and-best-practices/</guid>
      <description>Apache Camel supports a &lt;a href=&#34;http://camel.apache.org/mdc-logging.html&#34;&gt;mapped diagnostic context&lt;/a&gt; which can be used to improve log entries, but also there is a &lt;a href=&#34;http://camel.apache.org/log&#34;&gt;log component&lt;/a&gt; which makes it easier to create log entries. Together they can be used to create foundations of activity monitoring without need to deploy another tool or database.</description>
    </item>
    <item>
      <title>Preserving message order in ActiveMQ</title>
      <link>https://dywicki.pl/2011/11/preserving-message-order/</link>
      <pubDate>Fri, 18 Nov 2011 10:36:52 +0000</pubDate>
      <guid>https://dywicki.pl/2011/11/preserving-message-order/</guid>
      <description>&lt;p&gt;Few hours ago I&amp;rsquo;ve found an usefull &lt;a href=&#34;http://marcelojabali.blogspot.com/2011/11/preserving-message-order-with-apache.html&#34;&gt;post&lt;/a&gt; about preserving message order with &lt;a href=&#34;http://activemq.apache.org&#34;&gt;ActiveMQ&lt;/a&gt; written by &lt;a href=&#34;http://marcelojabali.blogspot.com/&#34;&gt;Marcelo Jabali&lt;/a&gt; from &lt;a href=&#34;http://www.fusesource.com/&#34;&gt;FUSE Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In his example Marcelo used broker feature called &lt;a href=&#34;http://activemq.apache.org/exclusive-consumer.html&#34;&gt;Exclusive Consumers&lt;/a&gt;. It lets send messages only to one consumer and if it fails then second consumer gets all messages. I think it is not the best idea if we have many messages to process. Why we wouldn&amp;rsquo;t use few consumers with preserved message order? Well, I was sure it is not possible, but during last training I&amp;rsquo;ve found solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building sample middleware - producer</title>
      <link>https://dywicki.pl/2011/06/sh-html/</link>
      <pubDate>Sat, 18 Jun 2011 12:40:30 +0000</pubDate>
      <guid>https://dywicki.pl/2011/06/sh-html/</guid>
      <description>&lt;p&gt;Last two days I&amp;rsquo;ve spent hacking Swing code. I decided to run standalone producer application to show real interaction with broker. You may treat this Swing app like entry point for people to our middleware system. Users simply do &amp;ldquo;transfers&amp;rdquo; from this application and don&amp;rsquo;t know anything about technical details. I added text area to main window to show structure of message sent to broker.&lt;/p&gt;
&lt;h2 id=&#34;producing-messages-with-jms&#34;&gt;Producing messages with JMS&lt;/h2&gt;
&lt;p&gt;Most of communication systems, whanever you will go have two different kinds of values, first - main and mainly used is body, second is typical metadata named headers or properties or parameters. JMS is not different, you can create different kinds of messages and set headers to them (in JMS world they&amp;rsquo;re named property, but I preffer header).
Let check messaging code we have:
[java highlight=&amp;ldquo;20,22,24,28-31&amp;rdquo;]
// import declarations &amp;hellip;
public class JmsMessageSender implements MessageSender, InitializingBean {&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building sample middleware – data structures</title>
      <link>https://dywicki.pl/2011/06/building-sample-middleware-data-structures/</link>
      <pubDate>Mon, 13 Jun 2011 12:54:18 +0000</pubDate>
      <guid>https://dywicki.pl/2011/06/building-sample-middleware-data-structures/</guid>
      <description>&lt;h2 id=&#34;data-with-middleware&#34;&gt;Data with middleware&lt;/h2&gt;
&lt;p&gt;The data structures are very important in middleware world. Because we often connect multiple systems we need to define an &amp;ldquo;domain model&amp;rdquo; for integration. The domain model means that objects we share between all systems are &lt;strong&gt;well known&lt;/strong&gt;, &lt;strong&gt;well defined&lt;/strong&gt;, &lt;strong&gt;well understand&lt;/strong&gt; in multiple teams often provided by multiple vendors. Let see what does it means in practice.&lt;/p&gt;
&lt;h4 id=&#34;well-known&#34;&gt;Well known&lt;/h4&gt;
&lt;p&gt;If you talk with business guys you have to use same terms with programmers. You might be mediator but not the translator. As integration team member mediate correct shape of solution but don&amp;rsquo;t became a translator between business divisions and developers (unless you are business analitic). All people should use same terms to minimalise problems with number of definitions. That&amp;rsquo;s first step of multiple projects, not only integration. If you look for deeper knowledge of domain definitions check a &amp;quot; &lt;a href=&#34;http://domaindrivendesign.org/books/evans_2003&#34;&gt;Domain Driven Design&lt;/a&gt;&amp;quot; book written by &lt;a href=&#34;http://domaindrivendesign.org/about#eric&#34;&gt;Eric Evans&lt;/a&gt; and published in 2003. Ok, maybe business is not always part of integration project, but you communicate systems used by people, isn&amp;rsquo;t?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building sample middleware - broker</title>
      <link>https://dywicki.pl/2011/06/building-sample-middleware-broker/</link>
      <pubDate>Fri, 10 Jun 2011 16:45:30 +0000</pubDate>
      <guid>https://dywicki.pl/2011/06/building-sample-middleware-broker/</guid>
      <description>&lt;p&gt;At end of the May I had great time in United Kingdom providing consulting. After this I started thinking about sharing an idea of middleware application based on ActiveMQ and Camel features. I&amp;rsquo;ve spent few days to create sufficient example.&lt;/p&gt;
&lt;h1 id=&#34;what-middleware-is&#34;&gt;What middleware is?&lt;/h1&gt;
&lt;p&gt;Middleware is a general term, about some software which is some kind of proxy between other systems. What for? - you could ask. Generally because communication from point to point is not the best to build bigger applications, and some components in middle of communication allows us to inject new logic without changing source systems. Could you imagine situation where you have a number of system producing messages and an number of consumers of these messages written in different languages? That&amp;rsquo;s typical case where middleware is going to be usefull.
There is number of middleware tools from various categories, in this post we&amp;rsquo;ll learn how to use ActiveMQ to build message oriented middleware. What does the MOM means? Generally that we have asynchronous communication without direct method invocations. Producer don&amp;rsquo;t know anything about consumer and vice versa. If you are interested in MOM - pick up &amp;quot; &lt;a href=&#34;http://manning.com/snyder/&#34;&gt;ActiveMQ in Action&lt;/a&gt;&amp;quot; book (written by commiters of ActiveMQ) from &lt;a href=&#34;http://manning.com&#34;&gt;Manning Publications Co.&lt;/a&gt; where this term is described in greater detail.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Budowanie przykładowego middleware - broker</title>
      <link>https://dywicki.pl/2011/06/budowanie-przykladowego-middleware-broker/</link>
      <pubDate>Fri, 10 Jun 2011 16:45:13 +0000</pubDate>
      <guid>https://dywicki.pl/2011/06/budowanie-przykladowego-middleware-broker/</guid>
      <description>&lt;p&gt;Pod koniec maja świetnie spędziłem czas w Wielkiej Brytanii dostarczając consulting. Tuż po nim zacząłem myśleć o podzieleniu się ideą aplikacji middleware zbudowanej na ActiveMQ z funkcjami Camela. Spędziłem kilka dni tworząc wystarczający przykład.&lt;/p&gt;
&lt;h1 id=&#34;czym-jest-middleware&#34;&gt;Czym jest middleware?&lt;/h1&gt;
&lt;p&gt;Middleware jest ogólnym terminem traktującym o oprogramowaniu które jest pewnego rodzaju pośrednikiem między systemami. Po cóż? - możesz zapytać. Generalnie ponieważ komunikacja pomiędzy punktami nie jest najlepsza do budowania większych aplikacji, co więcej niektóre komponenty pomiędzy komunikującymi pozwalają wstrzykiwać nową logikę bez zmieniania systemów komunikujących się. Czy możesz wyobrazić sobie sytuację gdzie wiele systemów tworzy komunikaty i wielu konsumentów tych komunikatów stworzonych w różnych językach? To jest typowy scenariusz gdzie middleware będzie użyteczne.
Istnieje wiele narzędzi middleware i kilka ich kategorii, w tym wpisie dowiemy się jak używać ActiveMQ do budowania message oriented middleware. Co oznacza termin MOM? To, że mamy asynchroniczną komunikację bez bezpośrednich wywołań metod. Producent nic nie wie o konsumencie i na odwrót. Jeśli jesteś zainteresowany MOM-ami - zajrzyj do książki &lt;a href=&#34;http://manning.com/snyder/&#34;&gt;&amp;ldquo;ActiveMQ in Action&amp;rdquo;&lt;/a&gt; (napisanej przez commiterów ActiveMQ) z &lt;a href=&#34;http://manning.com&#34;&gt;wydawnictwa Manning&lt;/a&gt;, w której termin ten jest opisany szerzej.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
